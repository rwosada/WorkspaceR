cat(num, ' 3의 배수 ')
} else if(num%%5==0){
cat(num, ' 5의 배수 ')
} else{
cat( ' 3, 5의 배수가 아닙니다.' )
}
#
# 실습 문제 2: 하나의 숫자를 입력받아 3의 배수이면 " 3의 배수"
#              5의 배수이면 " 5의 배수"
#              3, 5의 베수가 아니면 " 3, 5의 배수가 아닙니다." 출력
#
#
num <-as.numeric(readline('Input Number : '))
num <-as.numeric(readline('Input Number : '))
cat(' 3의 배수 ')
} else if(num%%5==0){
cat(' 5의 배수 ')
} else{
cat( ' 3, 5의 배수가 아닙니다.' )
}
if(num%%3==0){
cat(' 3의 배수 ')
} if(num%%5==0){
cat(' 5의 배수 ')
} else{
cat( ' 3, 5의 배수가 아닙니다.' )
}
if(num%%3==0){
cat(' 3의 배수 ')
#
# 실습 문제 2: 하나의 숫자를 입력받아 3의 배수이면 " 3의 배수"
#              5의 배수이면 " 5의 배수"
#              3, 5의 베수가 아니면 " 3, 5의 배수가 아닙니다." 출력
#
#
num <-as.numeric(readline('Input Number : '))
num <-as.numeric(readline('Input Number : '))
num <-as.numeric(readline('Input Number : '))
10
num <- as.numeric(readline('Input Number : '))
if(num%%3==0){
cat(' 3의 배수 ')
} else if(num%%5==0){
cat(' 5의 배수 ')
} else{
cat( ' 3, 5의 배수가 아닙니다.' )
}
#
# 실습 문제 2: 하나의 숫자를 입력받아 3의 배수이면 " 3의 배수"
#              5의 배수이면 " 5의 배수"
#              3, 5의 베수가 아니면 " 3, 5의 배수가 아닙니다." 출력
#
#
num <- as.numeric(readline('Input Number : '))
if(num%%3==0){
cat(' 3의 배수 ')
} else if(num%%5==0){
cat(' 5의 배수 ')
} else{
cat( ' 3, 5의 배수가 아닙니다.' )
}
#
# 실습 문제 2: 하나의 숫자를 입력받아 3의 배수이면 " 3의 배수"
#              5의 배수이면 " 5의 배수"
#              3, 5의 베수가 아니면 " 3, 5의 배수가 아닙니다." 출력
#
#
num <- as.numeric(readline('Input Number : '))
if(num%%3==0){
cat(' 3의 배수 ')
} else if(num%%5==0){
cat(' 5의 배수 ')
} else{
cat( ' 3, 5의 배수가 아닙니다.' )
}
if(num%%3==0){
cat(' 3의 배수 ')
} if(num%%5==0){
cat(' 5의 배수 ')
} if(num%%3!=0 & num%%5!=0){
cat( ' 3, 5의 배수가 아닙니다.' )
}
if(num%%3==0){
cat(' 3의 배수 ')
} if(num%%5==0){
cat(' 5의 배수 ')
} if(num%%3!=0 | num%%5!=0){
cat( ' 3, 5의 배수가 아닙니다.' )
}
if(num%%3==0){
cat(' 3의 배수 ')
num <- as.numeric(readline('Input Number : '))
num <- as.numeric(readline('Input Number : '))
num <- as.numeric(readline('Input Number : '))
num <- as.numeric(readline('Input Number : '))
num <- as.numeric(readline('Input Number : '))
num <- as.numeric(readline('Input Number : '))
num <- as.numeric(readline('Input Number : '))
as.data.frame(dasda)
num <- as.numeric(readline('Input Number : '))
if(num%%3==0){
cat(' 3의 배수 ')
} if(num%%5==0){
cat(' 5의 배수 ')
} if(num%%3!=0 | num%%5!=0){
cat( ' 3, 5의 배수가 아닙니다.' )
}
if(num%%3==0){
cat(' 3의 배수 ')
} else if(num%%5==0){
cat(' 5의 배수 ')
} else{
cat( ' 3, 5의 배수가 아닙니다.' )
}
#
# 실습 문제 2: 하나의 숫자를 입력받아 3의 배수이면 " 3의 배수"
#              5의 배수이면 " 5의 배수"
#              3, 5의 베수가 아니면 " 3, 5의 배수가 아닙니다." 출력
#
#
num <- as.numeric(readline('Input Number : '))
if(num%%3==0){
cat(' 3의 배수 ')
} else if(num%%5==0){
cat(' 5의 배수 ')
} else{
cat( ' 3, 5의 배수가 아닙니다.' )
}
#
# 실습 문제 2: 하나의 숫자를 입력받아 3의 배수이면 " 3의 배수"
#              5의 배수이면 " 5의 배수"
#              3, 5의 베수가 아니면 " 3, 5의 배수가 아닙니다." 출력
#
#
num <- as.numeric(readline('Input Number : '))
if(num%%3==0){
cat(' 3의 배수 ')
} else if(num%%5==0){
cat(' 5의 배수 ')
} else{
cat( ' 3, 5의 배수가 아닙니다.' )
}
if(num%%3==0){
cat(num,'(은)는 3의 배수 ')
} else if(num%%5==0){
cat(num,'(은)는 5의 배수 ')
} else{
cat(num, '(은)는 3, 5의 배수가 아닙니다.' )
}
multipe3 = num%%3==0
multipe5 = num%%5==0
if(multipe3){
cat(num,'(은)는 3의 배수 ')
} else if(multipe5){
cat(num,'(은)는 5의 배수 ')
} else{
cat(num, '(은)는 3, 5의 배수가 아닙니다.' )
}
for ( i in 1:10){
print('*')
}
for ( i in 1:10){
cat(i,'')
}
#
for ( i in 1:10){
print(c('*'))
}
for ( i in 1:10){
print('*')
}
for ( i in 1:10){
cat(i,'')
}
for ( i in 1:10){
cat(i,'')
}
#
multiple = 2
for (i in 2:9){
cat( multiple,'*',i,'=',multiple*i,'\n')
}
multiple = 2
for (i in 2:9){
cat( multiple,'*',i,'=',multiple*i)
}
for (i in 2:9){
cat( multiple,'*',i,'=',multiple * i, '\n')
}
for (i in 2:9) {
for(j in 1:9){
multiple = i*j
cat(multiple, '\t')
}
}
for (i in 2:9) {
for(j in 1:9){
multiple = i*j
cat(multiple, '\t\n')
}
}
for (i in 2:9) {
for(j in 1:9){
multiple = i*j
cat( c(multiple), '\t' )
}
}
i=1
while(i<=10){
print('*')
i= i+1
}
i=1
j='*'
while(i<=10){
print(j*i)
i= i+1
}
i=1
j='*'
while(i<=10){
cat(j)
i= i+1
}
i=1
j='*'
while(i<=10){
cat(j)
i= i+2
}
number <-  as,numeric(readline('Input number : '))
while (number >0 ) {
cat( 'Number : ')
}
i <- 2
while(i <=9){
j <- 1
while(j <=9){
multiple = i*j
cat(multiple,'\t')
j <- j+1
}
i-i+1
}
i <- 2
while(i <=9){
j <- 1
while(j <=9){
multiple = i*j
cat(multiple,'\t')
j <- j+1
}
i <- i+1
}
while(i <=9){
j <- 1
while(j <=9){
multiple = i*j
cat(multiple,'\t')
j <- j+1
}
cat('\n')
i <- i+1
}
i <- 2
while(i <=9){
j <- 1
while(j <=9){
multiple = i*j
cat(multiple,'\t')
j <- j+1
}
cat('\n')
i <- i+1
}
multiple <- function(x){
for( i in 1:9){
multiple <-  x*i
cat(x,'*',i,'=',multiple,'\n')
}
return()
}
multiple <- function(x){
for( i in 1:9){
multiple <-  x*i
cat(x,'*',i,'=',multiple,'\n')
}
return()
}
# 함수 호출
multiple(2)
multiple <- function(x){
for( i in 1:9){
multiple <-  x*i
cat(x,'*',i,'=',multiple,'\n')
}
#return()
}
# 함수 호출
multiple(2)
mymax <- function(x,y){
num.max <- x
if(y>num.max){
num.max <- y
}
return(num.max)
}
mymax(5,6)
a <- 10;b <- 5;c <- 8
max <- mymax(a,b); max <- mymax(max,c)
max
myCalc <- function(x,y){
add <- x + y
sub <- x - y
mul <- x * y
div <- x / y
rem <- x %% y
return(list(ret.add=add, ret.sub=sub, ret.mul=mul,
ret.div = div, ret,rem = rem))
}
result <- myCalc(10,5)
cat('10 + 5 = ', result$ret.add, '\n')
cat('10 - 5 = ', result$ret.sub, '\n')
cat('10 * 5 = ', result$ret.mul, '\n')
cat('10 / 5 = ', result$ret.div, '\n')
cat('10 %% 5 = ', result$ret.rem, '\n')
myCalc <- function(x,y){
add <- x + y
sub <- x - y
mul <- x * y
div <- x / y
rem <- x %% y
return(list(ret.add=add, ret.sub=sub, ret.mul=mul,
ret.div = div, ret,rem = rem))
result <- myCalc(10,5)
cat('10 + 5 = ', result$ret.add, '\n')
cat('10 - 5 = ', result$ret.sub, '\n')
cat('10 * 5 = ', result$ret.mul, '\n')
cat('10 / 5 = ', result$ret.div, '\n')
cat('10 %% 5 = ', result$ret.rem, '\n')
result <- myCalc(10,5)
cat('10 + 5 = ', result$ret.add, '\n')
cat('10 - 5 = ', result$ret.sub, '\n')
cat('10 * 5 = ', result$ret.mul, '\n')
cat('10 / 5 = ', result$ret.div, '\n')
cat('10 %% 5 = ', result$ret.rem, '\n')
myCalc <- function(x,y){
add <- x + y
sub <- x - y
mul <- x * y
div <- x / y
rem <- x %% y
return( list(ret.add = add, ret.sub = sub, ret.mul = mul,
ret.div = div, ret,rem = rem))
}
result <- myCalc(10,5)
cat('10 + 5 = ', result$ret.add, '\n')
cat('10 - 5 = ', result$ret.sub, '\n')
cat('10 * 5 = ', result$ret.mul, '\n')
cat('10 / 5 = ', result$ret.div, '\n')
cat('10 %% 5 = ', result$ret.rem, '\n')
# return값이 여러개인 함수
myCalc <- function(x,y){
add <- x + y
sub <- x - y
mul <- x * y
div <- x / y
rem <- x %% y
return( list(ret.add = add, ret.sub = sub, ret.mul = mul,
ret.div = div, ret,rem = rem))
}
result <- myCalc(10,5)
cat('10 + 5 = ', result$ret.add, '\n')
cat('10 - 5 = ', result$ret.sub, '\n')
cat('10 * 5 = ', result$ret.mul, '\n')
cat('10 / 5 = ', result$ret.div, '\n')
cat('10 %% 5 = ', result$ret.rem, '\n')
# return값이 여러개인 함수
myCalc <- function(x,y){
add <- x + y
sub <- x - y
mul <- x * y
div <- x / y
rem <- x %% y
return( list(ret.add = add, ret.sub = sub, ret.mul = mul,
ret.div = div, ret,rem = rem))
}
result <- myCalc(10,5)
cat('10 + 5 = ', result$ret.add, '\n')
cat('10 - 5 = ', result$ret.sub, '\n')
cat('10 * 5 = ', result$ret.mul, '\n')
cat('10 / 5 = ', result$ret.div, '\n')
cat('10 %% 5 = ', result$ret.rem, '\n')
# return값이 여러개인 함수
myCalc <- function(x,y){
add <- x + y
sub <- x - y
mul <- x * y
div <- x / y
rem <- x %% y
return( list(ret.add = add, ret.sub = sub, ret.mul = mul,
ret.div = div, ret,rem = rem))
}
result <- myCalc(10,5)
cat('10 + 5 = ', result$ret.add, '\n')
cat('10 - 5 = ', result$ret.sub, '\n')
cat('10 * 5 = ', result$ret.mul, '\n')
cat('10 / 5 = ', result$ret.div, '\n')
cat('10 %% 5 = ', result$ret.rem, '\n')
myCalc2 <- function(x,y){
result <- c( x + y, x - y, x * y, x / y, x %% y)
return( result)
}
myCalc2(10,5)
result <- myCalc(10,5)
myCalc <- function(x,y){
add <- x + y
sub <- x - y
mul <- x * y
div <- x / y
rem <- x %% y
return( list(ret.add = add, ret.sub = sub, ret.mul = mul,
ret.div = div, ret,rem = rem))
}
myCalc <- function(x,y){
add <- x + y
sub <- x - y
mul <- x * y
div <- x / y
rem <- x %% y
return( list(ret.add = add, ret.sub = sub, ret.mul = mul,
ret.div = div, ret,rem = rem))
}
result <- myCalc(10,5)
cat('10 + 5 = ', result$ret.add, '\n')
cat('10 - 5 = ', result$ret.sub, '\n')
cat('10 * 5 = ', result$ret.mul, '\n')
cat('10 / 5 = ', result$ret.div, '\n')
cat('10 %% 5 = ', result$ret.rem, '\n')
myCalc <- function(x,y){
add <- x + y
sub <- x - y
mul <- x * y
div <- x / y
rem <- x %% y
return( list(ret.add = add, ret.sub = sub, ret.mul = mul,
ret.div = div, ret,rem = rem))
}
myCalc <- function(x,y){
add <- x + y
sub <- x - y
mul <- x * y
div <- x / y
rem <- x %% y
return( list(ret.add = add, ret.sub = sub, ret.mul = mul,ret.div = div, ret,rem = rem))
}
result <- myCalc(10,5)
cat('10 + 5 = ', result$ret.add, '\n')
cat('10 - 5 = ', result$ret.sub, '\n')
cat('10 * 5 = ', result$ret.mul, '\n')
cat('10 / 5 = ', result$ret.div, '\n')
cat('10 %% 5 = ', result$ret.rem, '\n')
myCalc <- function(x,y){
add <- x + y
sub <- x - y
mul <- x * y
div <- x / y
rem <- x %% y
return( list(ret.add = add, ret.sub = sub, ret.mul = mul,
ret.div = div, ret,rem = rem))
}
result <- myCalc(10,5)
cat('10 + 5 = ', result$ret.add, '\n')
cat('10 - 5 = ', result$ret.sub, '\n')
cat('10 * 5 = ', result$ret.mul, '\n')
cat('10 / 5 = ', result$ret.div, '\n')
cat('10 %% 5 = ', result$ret.rem, '\n')
# return값이 여러개인 함수
myCalc <- function(x,y){
add <- x + y
sub <- x - y
mul <- x * y
div <- x / y
rem <- x %% y
return( list(ret.add = add, ret.sub = sub, ret.mul = mul,
ret.div = div, ret,rem = rem))
}
result <- myCalc(10,5)
cat('10 + 5 = ', result$ret.add, '\n')
cat('10 - 5 = ', result$ret.sub, '\n')
cat('10 * 5 = ', result$ret.mul, '\n')
cat('10 / 5 = ', result$ret.div, '\n')
cat('10 %% 5 = ', result$ret.rem, '\n')
myCalc <- function(x,y){
add <- x + y
sub <- x - y
mul <- x * y
div <- x / y
rem <- x %% y
return( list(ret.add = add, ret.sub = sub, ret.mul = mul,
ret.div = div, ret.rem = rem))
}
result <- myCalc(10,5)
cat('10 + 5 = ', result$ret.add, '\n')
cat('10 - 5 = ', result$ret.sub, '\n')
cat('10 * 5 = ', result$ret.mul, '\n')
cat('10 / 5 = ', result$ret.div, '\n')
cat('10 %% 5 = ', result$ret.rem, '\n')
setwd( "C:\\workspace\\workspaceR" )  #setwd("directory 경로") : Directory 변경 함수
df <- read.table( file = "airquality.txt", header = T)
df
class(df)
